875. Koko Eating Bananas
https://leetcode.com/problems/koko-eating-bananas/description/


class Solution {
    public static int max(int []a){
        int n=a.length,max=Integer.MIN_VALUE;
        for(int i=0;i<n;i++){
            if(a[i]>max){
                max=a[i];
            }
        }
        return max;a
    }
    public static int totalhrs(int []a, int h){
        int n=a.length,totalH=0;
        for(int i=0;i<n;i++){
            totalH+=Math.ceil((double)a[i]/(double)h);
        }
        return totalH;
    }
    public int minEatingSpeed(int[] piles, int h) {
        int low=1,high=max(piles);
        while(low<=high){
            int mid = (low+high)/2;
            int totalH=totalhrs(piles,mid);
            if(totalH<=h){
                high=mid-1;
            }
            else
                low=mid+1;
        }
        return low;
    }
}
