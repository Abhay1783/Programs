Count ways to N'th Stair(Order does not matter)
Difficulty: MediumAccuracy: 50.49%Submissions: 62K+Points: 4
There are n stairs, and a person standing at the bottom wants to reach the top. The person can climb either 1 stair or 2 stairs at a time. Count the number of ways, the person can reach the top (order does not matter).
Note: Order does not matter means for n = 4:- {1 2 1},{2 1 1},{1 1 2} are considered same.

Examples :

Input: n = 4
Output: 3
Explanation: Three ways to reach at 4th stair. They are {1, 1, 1, 1}, {1, 1, 2}, {2, 2}.

class Solution {
    public int nthStair(int n) {
        // Code here
       return countWays(n, 1);
    }
    public int countWays(int n, int step) {
        if (n == 0) return 1;
        if (n < 0) return 0;

        int count = 0;

        // Only allow steps of `1` or `2`, ensuring that the steps are non-decreasing.
        for (int i = step; i <= 2; i++) {
            count += countWays(n - i, i);
        }

        return count;
    }
}
